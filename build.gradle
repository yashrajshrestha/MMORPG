//apply plugin: 'java'
//
//sourceCompatibility = '1.8'
//[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
//
//// NetBeans will automatically add "run" and "debug" tasks relying on the
//// "mainClass" property. You may however define the property prior executing
//// tasks by passing a "-PmainClass=<QUALIFIED_CLASS_NAME>" argument.
////
//// Note however, that you may define your own "run" and "debug" task if you
//// prefer. In this case NetBeans will not add these tasks but you may rely on
//// your own implementation.
//if (!hasProperty('mainClass')) {
//    ext.mainClass = 'View.Main'
//}
//
//repositories {
//    mavenCentral()
//    // You may define additional repositories, or even remove "mavenCentral()".
//    // Read more about repositories here:
//    //   http://www.gradle.org/docs/current/userguide/dependency_management.html#sec:repositories
//}
//
//dependencies {
//    // TODO: Add dependencies here ...
//    // You can read more about how to add dependency here:
//    //   http://www.gradle.org/docs/current/userguide/dependency_management.html#sec:how_to_declare_your_dependencies
//    testCompile group: 'junit', name: 'junit', version: '4.10'
//    
//      compile "org.hibernate:hibernate-core:5.1.0.Final"
//      compile "mysql:mysql-connector-java:5.1.38"
//      compile "org.jboss:jboss-common-core:2.5.0.Final"
//      compile "com.toedter:jcalendar:1.4"
//}

apply plugin: 'java'


sourceCompatibility = '1.8'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

// NetBeans will automatically add "run" and "debug" tasks relying on the
// "mainClass" property. You may however define the property prior executing
// tasks by passing a "-PmainClass=<QUALIFIED_CLASS_NAME>" argument.
//
// Note however, that you may define your own "run" and "debug" task if you
// prefer. In this case NetBeans will not add these tasks but you may rely on
// your own implementation.
if (!hasProperty('mainClass')) {
    ext.mainClass = 'View.Main';
   
}

sourceSets { 
    main { 
        java { 
            srcDirs 'src/main/java' 
            // where the main code is 
            } 
             resources { 
             srcDir 'src/main/java' //button icons 
         }
              }
               }

//jar {
//
//    archiveName = "cims.jar"
//
//    from {
//
//        configurations.runtime.collect {
//            it.isDirectory() ? it : zipTree(it)
//        }
//
//        configurations.compile.collect {
//            it.isDirectory() ? it : zipTree(it)
//        }
//    }
//
//    manifest {
//        attributes 'Main-Class': 'cims.main.MainClass'
//    }
//
//    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
//}

repositories {
    mavenCentral()
    // You may define additional repositories, or even remove "mavenCentral()".
    // Read more about repositories here:
    //   http://www.gradle.org/docs/current/userguide/dependency_management.html#sec:repositories
}

dependencies {
    // TODO: Add dependencies here ...
    // You can read more about how to add dependency here:
    //   http://www.gradle.org/docs/current/userguide/dependency_management.html#sec:how_to_declare_your_dependencies
    testCompile group: 'junit', name: 'junit', version: '4.10'
    
compile "org.hibernate:hibernate-core:5.1.0.Final"

compile "mysql:mysql-connector-java:5.1.38"

compile "org.jboss:jboss-common-core:2.5.0.Final"

compile "com.toedter:jcalendar:1.4"
}

task copyRuntimeLibs(type: Copy) {

into "$buildDir/libs/lib"

from configurations.testRuntime

}

jar {
    
   dependsOn copyRuntimeLibs

    //setting up the main class and class path header to point to the main application class and dependency jars
    manifest.attributes "Main-Class":"View.Main"
    manifest.attributes "Class-Path":configurations.testRuntime.collect { 'lib/'+it.getName() }.join(' ')
    
}


